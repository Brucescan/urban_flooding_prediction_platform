services:
  db:
    image: postgis/postgis:latest
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d/  # 新增挂载初始化脚本

  redis:
    image: redis:latest
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio_user
      MINIO_ROOT_PASSWORD: minio_password
    volumes:
      - minio_data:/data

  web:
    build: .
    entrypoint: /usr/local/bin/wait-for-db.sh
    command: [ "/opt/rgee-venv/bin/python", "manage.py", "runserver", "0.0.0.0:8000" ]
    volumes:
      - .:/app/code  # 避免覆盖系统目录
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - minio
    environment:
      PATH: "/opt/rgee-venv/bin:/usr/local/bin:/usr/bin:/bin"  # 确保系统路径
      POSTGRES_DB: mydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      DJANGO_SUPERUSER_USERNAME: admin
      DJANGO_SUPERUSER_PASSWORD: 123456
      DJANGO_SUPERUSER_EMAIL: admin@admin.com
  beat:
    build: .
    command: |
      bash -c '
      # 等待Redis可用
      while ! redis-cli -h redis ping; do sleep 2; done
      
      # 启动beat时先执行schema迁移
      python manage.py migrate &&
      celery -A backend beat \
        --loglevel=info \
        --schedule=/var/lib/celery/celerybeat-schedule \
        --pidfile=/tmp/celerybeat.pid
      '
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=backend.settings
      - TZ=Asia/Shanghai
    volumes:
      - ./celery:/app/celery
      - celery_data:/var/lib/celery
  worker:
    build: .
    command: |
      bash -c '
      # 等待数据库和Redis可用
      while ! pg_isready -h db -U postgres; do sleep 2; done
      while ! redis-cli -h redis ping; do sleep 2; done
      
      # 启动worker
      celery -A backend worker \
        --loglevel=info \
        --concurrency=1 \
        --queues=satellite_sync \
        --hostname=satellite_sync@%%h
      '
    depends_on:
      - db
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=backend.settings
volumes:
  pg_data:
  minio_data:
  celery_data:
  redis_data:




